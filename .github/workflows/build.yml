#build rishabh cicd
name: Build and Push Image to AWS ECR
on:
  pull_request_target:
    branches: [ "main-rm" ]
    types: [ "closed" ]

jobs:
  build-and-push:
    if: github.event.pull_request.merged == true

    name: SSH and create directory
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      run: |
        mkdir ../docker
        cp -TR ./docker/ ../docker
        tar -cvf docker.tar ../docker/


    - name: copy file via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOSTNAMERM }}
        username: ${{ secrets.USERNAMERM }}
        password: ${{ secrets.PASSWORDRM }}
        port: ${{ secrets.PORT }}
        source: "docker.tar"
        target: "/home/downloadserver/rishabh" 

    - name: ssh and package creation
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOSTNAMERM }}
        username: ${{ secrets.USERNAMERM }}
        password: ${{ secrets.PASSWORDRM }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: | 
          sudo apt-get install docker.io -y
          sudo apt-get install docker-compose -y
          cd rishabh
          tar -xvf docker.tar
          sudo docker-compose -f ./docker/build-images.yml up -d


    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, Tag, and Push the Image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: rishabh-cicd
    #     IMAGE_TAG: dev_1.0.0
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG suricata/.
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
